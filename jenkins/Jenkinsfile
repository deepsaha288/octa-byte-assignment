pipeline {
  agent any

  environment {
    ECR_BACKEND = '586771776875.dkr.ecr.us-east-1.amazonaws.com/express-api-backend:latest'
    ECR_FRONTEND = '586771776875.dkr.ecr.us-east-1.amazonaws.com/react-app-frontend:latest'
    AWS_REGION = 'us-east-1'
  }

  stages {
    stage('Checkout') {
      steps {
        git credentialsId: 'GITHUB_CREDS', url: 'https://github.com/deepsaha288/mern-app.git'
      }
    }

    stage('Build Backend') {
      steps {
        dir('app/server') {
          sh '''
            docker build -t $ECR_BACKEND .
          '''
        }
      }
    }

    stage('Build Frontend') {
      steps {
        dir('app/client') {
          sh '''
            docker build -t $ECR_FRONTEND .
          '''
        }
      }
    }

    stage('Push to ECR') {
      steps {
        withCredentials([[
          $class: 'AmazonWebServicesCredentialsBinding',
          credentialsId: 'aws-creds'
        ]]) {
          sh '''
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 586771776875.dkr.ecr.us-east-1.amazonaws.com
            docker push $ECR_BACKEND
            docker push $ECR_FRONTEND
          '''
        }
      }
    }

    stage('Deploy to EKS') {
      steps {
        dir('k8s') {
          sh '''
            kubectl apply -f namespace.yaml
            kubectl apply -f db-secret.yaml
            kubectl apply -f react-deployment.yaml
            kubectl apply -f express-deployment.yaml
            kubectl apply -f ingress.yaml
            kubectl apply -f grafana-ingress.yaml
          '''
        }
      }
    }
  }

  post {
    always {
      cleanWs()
    }
    success {
      echo 'Pipeline completed successfully!'
    }
    failure {
      echo 'Pipeline failed!'
    }
  }
}
